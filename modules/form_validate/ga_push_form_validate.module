<?php

/**
 * Implements hook_menu
 */
function ga_push_form_validate_menu() {
  
  $items['admin/config/system/ga-push/form-validate'] = array(
    'title' => t('Ga push: form validate'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ga_push_form_validate_settings_form'),
    'access arguments' => array('admin ga push'),
    'description' => 'Global configuration of ga push.',
    'file' => 'ga_push_form_validate.admin.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );
  
  return $items;
  
}

/**
 * Implements hook_form_alter
 */
function ga_push_form_validate_form_alter(&$form, &$form_state, $form_id) {
  
  if (variable_get('ga_push_form_validate_show_form_ids', FALSE) && user_access('admin ga push')) {
    $form['ga_push_validate'] = array(
      '#markup' => t('FORM ID: @form_id', array('@form_id' => $form_id)),
    );
  }
  
  $logged_forms = ga_push_form_validate_get_logged_forms();
  $log = FALSE;
  foreach ($logged_forms as $value) {
    $pattern = '/' . $value . '/'; //TODO: mirar para expresiones regulares si quitar el /
    if (preg_match($pattern, $form_id)) {
      $log = TRUE;
    }
  }
  if ($log) {
    $form['#after_build'][] = 'ga_push_form_validate_form_after_build';
  }
  
}

/**
 * Añade la función de validate en último lugar para recoger todos los errores (TODO: traducir)
 */
function ga_push_form_validate_form_after_build($form, $form_state) {
  $form['#validate'][] = 'ga_push_form_validate_get_validate_errors';
  return $form;
}

/**
 * Add erros info to push
 */
function ga_push_form_validate_get_validate_errors($form, $form_state) {
  
  $errors = form_get_errors();
  
  if (is_array($errors)) {
    foreach ($errors as $key => $error) {
      //TODO ¿filtrar el campo?
      ga_push_add(array(t('Form validate error'), $form['form_id']['#value'] . ' - ' .$key, $error , 1));
    }
  }
  
}

/**
 * Returns all logged forms
 */
function ga_push_form_validate_get_logged_forms() {
  $forms = variable_get('ga_push_form_validate_forms', '');
  return array_map('trim', explode("\n", $forms));
}